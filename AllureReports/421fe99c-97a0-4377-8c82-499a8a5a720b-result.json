{"name": "test_AddCustomer", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: no such execution context\n  (Session info: chrome=121.0.6167.140)\nStacktrace:\n\tGetHandleVerifier [0x00007FF61D2F5E42+3538674]\n\t(No symbol) [0x00007FF61CF14C02]\n\t(No symbol) [0x00007FF61CDC599D]\n\t(No symbol) [0x00007FF61CDB33C6]\n\t(No symbol) [0x00007FF61CDB13F1]\n\t(No symbol) [0x00007FF61CDB1E5F]\n\t(No symbol) [0x00007FF61CDBFB60]\n\t(No symbol) [0x00007FF61CDD1D83]\n\t(No symbol) [0x00007FF61CDD61DA]\n\t(No symbol) [0x00007FF61CDB2420]\n\t(No symbol) [0x00007FF61CDD1953]\n\t(No symbol) [0x00007FF61CE4BCBA]\n\t(No symbol) [0x00007FF61CE2EE53]\n\t(No symbol) [0x00007FF61CDFF514]\n\t(No symbol) [0x00007FF61CE00631]\n\tGetHandleVerifier [0x00007FF61D326CAD+3738973]\n\tGetHandleVerifier [0x00007FF61D37C506+4089270]\n\tGetHandleVerifier [0x00007FF61D374823+4057299]\n\tGetHandleVerifier [0x00007FF61D045C49+720121]\n\t(No symbol) [0x00007FF61CF2126F]\n\t(No symbol) [0x00007FF61CF1C304]\n\t(No symbol) [0x00007FF61CF1C432]\n\t(No symbol) [0x00007FF61CF0BD04]\n\tBaseThreadInitThunk [0x00007FFB3228257D+29]\n\tRtlUserThreadStart [0x00007FFB334EAA58+40]", "trace": "request = <SubRequest 'setup' for <Function test_AddCustomer>>\n\n    @pytest.fixture\n    def setup(request):\n        browser = request.config.getoption(\"--browser\")\n        if browser == \"chrome\":\n            driver = webdriver.Chrome()\n        elif  browser == \"firefox\":\n            driver = webdriver.Firefox()\n        elif browser == \"edge\":\n            driver = webdriver.Edge()\n        else:\n            driver = webdriver.Chrome(options= chrom_option)\n>       driver.get(\"https://admin-demo.nopcommerce.com/login?ReturnUrl=%2Fadmin%2F\")\n\ntestCases\\conftest.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\dell\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:357: in get\n    self.execute(Command.GET, {\"url\": url})\nC:\\Users\\dell\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001AE2AEC25D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"no such execution context\",\"message\":\"no such execution context\\\\n  (Sess...07FF61CF0BD04]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB3228257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFB334EAA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: no such execution context\nE         (Session info: chrome=121.0.6167.140)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF61D2F5E42+3538674]\nE       \t(No symbol) [0x00007FF61CF14C02]\nE       \t(No symbol) [0x00007FF61CDC599D]\nE       \t(No symbol) [0x00007FF61CDB33C6]\nE       \t(No symbol) [0x00007FF61CDB13F1]\nE       \t(No symbol) [0x00007FF61CDB1E5F]\nE       \t(No symbol) [0x00007FF61CDBFB60]\nE       \t(No symbol) [0x00007FF61CDD1D83]\nE       \t(No symbol) [0x00007FF61CDD61DA]\nE       \t(No symbol) [0x00007FF61CDB2420]\nE       \t(No symbol) [0x00007FF61CDD1953]\nE       \t(No symbol) [0x00007FF61CE4BCBA]\nE       \t(No symbol) [0x00007FF61CE2EE53]\nE       \t(No symbol) [0x00007FF61CDFF514]\nE       \t(No symbol) [0x00007FF61CE00631]\nE       \tGetHandleVerifier [0x00007FF61D326CAD+3738973]\nE       \tGetHandleVerifier [0x00007FF61D37C506+4089270]\nE       \tGetHandleVerifier [0x00007FF61D374823+4057299]\nE       \tGetHandleVerifier [0x00007FF61D045C49+720121]\nE       \t(No symbol) [0x00007FF61CF2126F]\nE       \t(No symbol) [0x00007FF61CF1C304]\nE       \t(No symbol) [0x00007FF61CF1C432]\nE       \t(No symbol) [0x00007FF61CF0BD04]\nE       \tBaseThreadInitThunk [0x00007FFB3228257D+29]\nE       \tRtlUserThreadStart [0x00007FFB334EAA58+40]\n\nC:\\Users\\dell\\AppData\\Roaming\\Python\\Python311\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "start": 1707119334519, "stop": 1707119334519, "uuid": "b62a4eef-c0c5-4bfd-a94d-7deddf0ab052", "historyId": "03ff2e775c1ca93e52e3aa183b4dbd7d", "testCaseId": "03ff2e775c1ca93e52e3aa183b4dbd7d", "fullName": "testCases.test_AddCustomer.Test_AddCutomerClass#test_AddCustomer", "labels": [{"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_AddCustomer"}, {"name": "subSuite", "value": "Test_AddCutomerClass"}, {"name": "host", "value": "DESKTOP-UU0D5DC"}, {"name": "thread", "value": "26564-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_AddCustomer"}]}